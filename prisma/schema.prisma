generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique @db.VarChar(100)
  password            String
  createdAt           DateTime             @default(now()) @map("created_at")
  sessions            Session[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  email        String
  expires      DateTime
  user         User     @relation(fields: [email], references: [id], onDelete: Cascade)
}

model Faqs {
  id       String @id @default(cuid())
  question String @unique
  answer   String
}

model FileMetaData {
  id         Int      @id @default(autoincrement())
  s3Url      String   @unique
  uploadDate DateTime @default(now())
  fileType   String
  puppyId    Int?
  tags       String[]
  puppy      Puppy?   @relation(fields: [puppyId], references: [id])
}

model ContactForm {
  id          String      @id @default(cuid())
  email       String      @db.VarChar(100)
  phone       String      @db.VarChar(30)
  body        String      @db.VarChar(2000)
  contactType ContactType
  name        String      @db.VarChar(100)
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_token")
}

model Puppy {
  id        Int            @id @default(autoincrement())
  name      String
  birthdate DateTime
  color     String
  status    String
  price     Float
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  gallery   FileMetaData[]
}

model Event {
  id            Int      @id @default(autoincrement())
  name          String
  date          DateTime @default(now())
  isEventActive Boolean
  showBanner    Boolean  @default(false)
}

enum ContactType {
  GENERAL
  STUD
  PURCHASE
}
